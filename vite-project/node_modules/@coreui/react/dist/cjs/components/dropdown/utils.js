'use strict';

var getAlignmentClassNames = function (alignment) {
    var classNames = [];
    if (typeof alignment === 'object') {
        for (var key in alignment) {
            classNames.push("dropdown-menu".concat(key === 'xs' ? '' : "-".concat(key), "-").concat(alignment[key]));
        }
    }
    if (typeof alignment === 'string') {
        classNames.push("dropdown-menu-".concat(alignment));
    }
    return classNames;
};
var getNextActiveElement = function (list, activeElement, shouldGetNext, isCycleAllowed) {
    var listLength = list.length;
    var index = list.indexOf(activeElement);
    if (index === -1) {
        return !shouldGetNext && isCycleAllowed ? list[listLength - 1] : list[0];
    }
    index += shouldGetNext ? 1 : -1;
    if (isCycleAllowed) {
        index = (index + listLength) % listLength;
    }
    return list[Math.max(0, Math.min(index, listLength - 1))];
};
var getPlacement = function (placement, direction, alignment, isRTL) {
    var _placement = placement;
    if (direction === 'dropup') {
        _placement = isRTL ? 'top-end' : 'top-start';
    }
    if (direction === 'dropup-center') {
        _placement = 'top';
    }
    if (direction === 'dropend') {
        _placement = isRTL ? 'left-start' : 'right-start';
    }
    if (direction === 'dropstart') {
        _placement = isRTL ? 'right-start' : 'left-start';
    }
    if (alignment === 'end') {
        _placement = isRTL ? 'bottom-start' : 'bottom-end';
    }
    return _placement;
};

exports.getAlignmentClassNames = getAlignmentClassNames;
exports.getNextActiveElement = getNextActiveElement;
exports.getPlacement = getPlacement;
//# sourceMappingURL=utils.js.map
